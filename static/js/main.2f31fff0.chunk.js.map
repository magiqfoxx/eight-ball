{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","messages","useState","text","setText","shaking","setShaking","className","onClick","Math","floor","random","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAuCeA,MApCf,WACE,IAAMC,EAAW,CACf,eACA,cACA,kCACA,uBACA,QANW,EAQWC,mBAAS,IARpB,mBAQNC,EARM,KAQAC,EARA,OASiBF,oBAAS,GAT1B,mBASNG,EATM,KASGC,EATH,KAUb,OACE,sBAAKC,UAAU,YAAf,UACE,wIAIA,wBACEC,QAAS,WACPJ,EAAQH,EAASQ,KAAKC,MAAsB,EAAhBD,KAAKE,YACjCL,GAAW,GACXM,YAAW,WACTN,GAAW,KACV,MANP,mBAWA,qBAAKC,UAAWF,EAAU,eAAiB,OAA3C,SACE,qBAAKE,UAAWF,EAAU,0BAA4B,UAAtD,SACE,sBAAME,UAAWF,EAAU,oBAAsB,OAAjD,SAA0DF,YCpBrDU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2f31fff0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const messages = [\n    \"no chyba nie\",\n    \"no chyba ty\",\n    \"tak było, nie zmyślam\",\n    \"no to ŚWIETNIE!\",\n    \"AHA.\",\n  ];\n  const [text, setText] = useState(\"\");\n  const [shaking, setShaking] = useState(false);\n  return (\n    <div className=\"container\">\n      <h2>\n        Magiczna kula pomoze Ci podjąć decyzję. Po prostu zadaj pytanie i\n        potrząśnij.\n      </h2>\n      <button\n        onClick={() => {\n          setText(messages[Math.floor(Math.random() * 4)]);\n          setShaking(true);\n          setTimeout(() => {\n            setShaking(false);\n          }, 4000);\n        }}\n      >\n        shake\n      </button>\n      <div className={shaking ? \"ball shaking\" : \"ball\"}>\n        <div className={shaking ? \"shaking-message message\" : \"message\"}>\n          <span className={shaking ? \"shaking-text text\" : \"text\"}>{text}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}